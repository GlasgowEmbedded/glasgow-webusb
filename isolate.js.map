{
  "version": 3,
  "sources": ["../node_modules/coi-serviceworker/coi-serviceworker.js"],
  "sourcesContent": ["/*! coi-serviceworker v0.1.7 - Guido Zuidhof and contributors, licensed under MIT */\nlet coepCredentialless = false;\nif (typeof window === 'undefined') {\n    self.addEventListener(\"install\", () => self.skipWaiting());\n    self.addEventListener(\"activate\", (event) => event.waitUntil(self.clients.claim()));\n\n    self.addEventListener(\"message\", (ev) => {\n        if (!ev.data) {\n            return;\n        } else if (ev.data.type === \"deregister\") {\n            self.registration\n                .unregister()\n                .then(() => {\n                    return self.clients.matchAll();\n                })\n                .then(clients => {\n                    clients.forEach((client) => client.navigate(client.url));\n                });\n        } else if (ev.data.type === \"coepCredentialless\") {\n            coepCredentialless = ev.data.value;\n        }\n    });\n\n    self.addEventListener(\"fetch\", function (event) {\n        const r = event.request;\n        if (r.cache === \"only-if-cached\" && r.mode !== \"same-origin\") {\n            return;\n        }\n\n        const request = (coepCredentialless && r.mode === \"no-cors\")\n            ? new Request(r, {\n                credentials: \"omit\",\n            })\n            : r;\n        event.respondWith(\n            fetch(request)\n                .then((response) => {\n                    if (response.status === 0) {\n                        return response;\n                    }\n\n                    const newHeaders = new Headers(response.headers);\n                    newHeaders.set(\"Cross-Origin-Embedder-Policy\",\n                        coepCredentialless ? \"credentialless\" : \"require-corp\"\n                    );\n                    if (!coepCredentialless) {\n                        newHeaders.set(\"Cross-Origin-Resource-Policy\", \"cross-origin\");\n                    }\n                    newHeaders.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n\n                    return new Response(response.body, {\n                        status: response.status,\n                        statusText: response.statusText,\n                        headers: newHeaders,\n                    });\n                })\n                .catch((e) => console.error(e))\n        );\n    });\n\n} else {\n    (() => {\n        // You can customize the behavior of this script through a global `coi` variable.\n        const coi = {\n            shouldRegister: () => true,\n            shouldDeregister: () => false,\n            coepCredentialless: () => !(window.chrome || window.netscape),\n            doReload: () => window.location.reload(),\n            quiet: false,\n            ...window.coi\n        };\n\n        const n = navigator;\n\n        if (n.serviceWorker && n.serviceWorker.controller) {\n            n.serviceWorker.controller.postMessage({\n                type: \"coepCredentialless\",\n                value: coi.coepCredentialless(),\n            });\n\n            if (coi.shouldDeregister()) {\n                n.serviceWorker.controller.postMessage({ type: \"deregister\" });\n            }\n        }\n\n        // If we're already coi: do nothing. Perhaps it's due to this script doing its job, or COOP/COEP are\n        // already set from the origin server. Also if the browser has no notion of crossOriginIsolated, just give up here.\n        if (window.crossOriginIsolated !== false || !coi.shouldRegister()) return;\n\n        if (!window.isSecureContext) {\n            !coi.quiet && console.log(\"COOP/COEP Service Worker not registered, a secure context is required.\");\n            return;\n        }\n\n        // In some environments (e.g. Chrome incognito mode) this won't be available\n        if (n.serviceWorker) {\n            n.serviceWorker.register(window.document.currentScript.src).then(\n                (registration) => {\n                    !coi.quiet && console.log(\"COOP/COEP Service Worker registered\", registration.scope);\n\n                    registration.addEventListener(\"updatefound\", () => {\n                        !coi.quiet && console.log(\"Reloading page to make use of updated COOP/COEP Service Worker.\");\n                        coi.doReload();\n                    });\n\n                    // If the registration is active, but it's not controlling the page\n                    if (registration.active && !n.serviceWorker.controller) {\n                        !coi.quiet && console.log(\"Reloading page to make use of COOP/COEP Service Worker.\");\n                        coi.doReload();\n                    }\n                },\n                (err) => {\n                    !coi.quiet && console.error(\"COOP/COEP Service Worker failed to register:\", err);\n                }\n            );\n        }\n    })();\n}\n"],
  "mappings": "mBACA,IAAIA,EAAqB,GACrB,OAAO,OAAW,KAClB,KAAK,iBAAiB,UAAW,IAAM,KAAK,YAAY,CAAC,EACzD,KAAK,iBAAiB,WAAaC,GAAUA,EAAM,UAAU,KAAK,QAAQ,MAAM,CAAC,CAAC,EAElF,KAAK,iBAAiB,UAAYC,GAAO,CACrC,GAAKA,EAAG,KAEGA,EAAG,KAAK,OAAS,aACxB,KAAK,aACA,WAAW,EACX,KAAK,IACK,KAAK,QAAQ,SAAS,CAChC,EACA,KAAKC,GAAW,CACbA,EAAQ,QAASC,GAAWA,EAAO,SAASA,EAAO,GAAG,CAAC,CAC3D,CAAC,EACEF,EAAG,KAAK,OAAS,uBACxBF,EAAqBE,EAAG,KAAK,WAX7B,OAaR,CAAC,EAED,KAAK,iBAAiB,QAAS,SAAUD,EAAO,CAC5C,IAAM,EAAIA,EAAM,QAChB,GAAI,EAAE,QAAU,kBAAoB,EAAE,OAAS,cAC3C,OAGJ,IAAMI,EAAWL,GAAsB,EAAE,OAAS,UAC5C,IAAI,QAAQ,EAAG,CACb,YAAa,MACjB,CAAC,EACC,EACNC,EAAM,YACF,MAAMI,CAAO,EACR,KAAMC,GAAa,CAChB,GAAIA,EAAS,SAAW,EACpB,OAAOA,EAGX,IAAMC,EAAa,IAAI,QAAQD,EAAS,OAAO,EAC/C,OAAAC,EAAW,IAAI,+BACXP,EAAqB,iBAAmB,cAC5C,EACKA,GACDO,EAAW,IAAI,+BAAgC,cAAc,EAEjEA,EAAW,IAAI,6BAA8B,aAAa,EAEnD,IAAI,SAASD,EAAS,KAAM,CAC/B,OAAQA,EAAS,OACjB,WAAYA,EAAS,WACrB,QAASC,CACb,CAAC,CACL,CAAC,EACA,MAAOC,GAAM,QAAQ,MAAMA,CAAC,CAAC,CACtC,CACJ,CAAC,IAGA,IAAM,CAEH,IAAMC,EAAM,CACR,eAAgB,IAAM,GACtB,iBAAkB,IAAM,GACxB,mBAAoB,IAAM,EAAE,OAAO,QAAU,OAAO,UACpD,SAAU,IAAM,OAAO,SAAS,OAAO,EACvC,MAAO,GACP,GAAG,OAAO,GACd,EAEMC,EAAI,UAeV,GAbIA,EAAE,eAAiBA,EAAE,cAAc,aACnCA,EAAE,cAAc,WAAW,YAAY,CACnC,KAAM,qBACN,MAAOD,EAAI,mBAAmB,CAClC,CAAC,EAEGA,EAAI,iBAAiB,GACrBC,EAAE,cAAc,WAAW,YAAY,CAAE,KAAM,YAAa,CAAC,GAMjE,SAAO,sBAAwB,IAAS,CAACD,EAAI,eAAe,GAEhE,IAAI,CAAC,OAAO,gBAAiB,CACzB,CAACA,EAAI,OAAS,QAAQ,IAAI,wEAAwE,EAClG,MACJ,CAGIC,EAAE,eACFA,EAAE,cAAc,SAAS,OAAO,SAAS,cAAc,GAAG,EAAE,KACvDC,GAAiB,CACd,CAACF,EAAI,OAAS,QAAQ,IAAI,sCAAuCE,EAAa,KAAK,EAEnFA,EAAa,iBAAiB,cAAe,IAAM,CAC/C,CAACF,EAAI,OAAS,QAAQ,IAAI,iEAAiE,EAC3FA,EAAI,SAAS,CACjB,CAAC,EAGGE,EAAa,QAAU,CAACD,EAAE,cAAc,aACxC,CAACD,EAAI,OAAS,QAAQ,IAAI,yDAAyD,EACnFA,EAAI,SAAS,EAErB,EACCG,GAAQ,CACL,CAACH,EAAI,OAAS,QAAQ,MAAM,+CAAgDG,CAAG,CACnF,CACJ,EAER,GAAG",
  "names": ["coepCredentialless", "event", "ev", "clients", "client", "request", "response", "newHeaders", "e", "coi", "n", "registration", "err"]
}
